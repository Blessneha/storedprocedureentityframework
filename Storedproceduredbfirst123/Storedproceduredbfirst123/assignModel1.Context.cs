//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Storedproceduredbfirst123
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class assign2Entities1 : DbContext
    {
        public assign2Entities1()
            : base("name=assign2Entities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<employeees1> employeees1 { get; set; }
        public virtual DbSet<product> products { get; set; }
        public virtual DbSet<product2> product2 { get; set; }
    
        public virtual int Addemployees(Nullable<int> empid, string empname)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            var empnameParameter = empname != null ?
                new ObjectParameter("empname", empname) :
                new ObjectParameter("empname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Addemployees", empidParameter, empnameParameter);
        }
    
        public virtual int Deleteemployee(Nullable<int> empid)
        {
            var empidParameter = empid.HasValue ?
                new ObjectParameter("empid", empid) :
                new ObjectParameter("empid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Deleteemployee", empidParameter);
        }
    
        public virtual ObjectResult<getallemployees_Result> getallemployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getallemployees_Result>("getallemployees");
        }
    }
}
